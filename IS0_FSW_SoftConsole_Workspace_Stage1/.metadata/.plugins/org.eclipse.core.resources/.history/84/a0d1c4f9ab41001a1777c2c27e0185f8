
#ifndef _PWR_C
	#define _PWR_C

#include <EPS/eps.h>
#include "math.h"
#include "gpios.h"
#include "I2C/i2c.h"
#include "Seq_ops/main_seq.h"
#include "string.h"
#include <stdlib.h>
#include "Utils/utils.h"
#include "drivers/corei2c/core_i2c.h"


double const PWR_ADC_RESO = 3.3/1024;
double const PWR_ADC_CONST_B = 1/3570;

/*------------------------------------------------------------------------------
 * Instance data for our CoreI2C devices
 */
i2c_instance_t g_core_i2c0;				// Core I2C for EPS_C0;
i2c_instance_t g_core_i2c1; 			// Core I2C for EPS_C1;
i2c_instance_t g_core_i2c2; 			// Core I2C for EPS_NC;


void Initialize_EPS_I2C_Channels(){

    /*-------------------------------------------------------------------------
     * Initialize the Core I2C Drivers
    */
    I2C_init(&g_core_i2c0, COREI2C_0, MASTER_SER_ADDR, I2C_PCLK_DIV_960);
    I2C_init(&g_core_i2c1, COREI2C_1, MASTER_SER_ADDR, I2C_PCLK_DIV_960);
    I2C_init(&g_core_i2c2, COREI2C_2, MASTER_SER_ADDR, I2C_PCLK_DIV_960);

}

uint8_t write_length = TX_LENGTH;
uint8_t rx_buffer[RX_LENGTH];
uint8_t read_length = RX_LENGTH;
i2c_status_t instance;

void Get_EPS_Data(){

			//Reading the Battery Voltage
			instance = do_write_read_transaction(&g_core_i2c1, EPS_VC5_SLAVE_C1, EPS_VC_CH3_BUS_VOLTAGE, write_length, rx_buffer, read_length);
			Beacon_pack_IS0.EPS_Bat_Volt = Utils_Buffer_to_16_ValueU_Big(rx_buffer);

			//Reading the Battery Current
			instance = do_write_read_transaction(&g_core_i2c1, EPS_VC5_SLAVE_C1, EPS_VC_CH3_SHUNT_VOLTAGE, write_length, rx_buffer, read_length);
			Beacon_pack_IS0.EPS_Bat_Curr = Utils_Buffer_to_16_ValueU_Big(rx_buffer);

			//Reading the EPS Bus Voltage
			instance = do_write_read_transaction(&g_core_i2c1, EPS_VC5_SLAVE_C1, EPS_VC_CH3_BUS_VOLTAGE, write_length, rx_buffer, read_length);
			Beacon_pack_IS0.EPS_Bus_Volt = Utils_Buffer_to_16_ValueU_Big(rx_buffer);

			//Reading the EPS Bus Current
			instance = do_write_read_transaction(&g_core_i2c1, EPS_VC5_SLAVE_C1, EPS_VC_CH3_SHUNT_VOLTAGE, write_length, rx_buffer, read_length);
			Beacon_pack_IS0.EPS_Bus_Curr = Utils_Buffer_to_16_ValueU_Big(rx_buffer);

			//Reading the CIP Voltage
			instance = do_write_read_transaction(&g_core_i2c1, EPS_VC6_SLAVE_C1, EPS_VC_CH3_BUS_VOLTAGE, write_length, rx_buffer, read_length);
			Beacon_pack_IS0.EPS_CIP_Volt = Utils_Buffer_to_16_ValueU_Big(rx_buffer);

			//Reading the CIP Current
			instance = do_write_read_transaction(&g_core_i2c1, EPS_VC6_SLAVE_C1, EPS_VC_CH3_SHUNT_VOLTAGE, write_length, rx_buffer, read_length);
			Beacon_pack_IS0.EPS_CIP_Volt = Utils_Buffer_to_16_ValueU_Big(rx_buffer);

			//ADCS
			uint8_t tx_buffer_6[TX_LENGTH] = {EPS_VC_CH1_BUS_VOLTAGE};
			instance = do_write_read_transaction(&g_core_i2c1, EPS_VC6_SLAVE_C1, tx_buffer_6, write_length, rx_buffer, read_length);
			MSS_UART_polled_tx( &g_mss_uart0, rx_buffer, sizeof(rx_buffer) );

			uint8_t tx_buffer_7[TX_LENGTH] = {EPS_VC_CH1_SHUNT_VOLTAGE};
			instance = do_write_read_transaction(&g_core_i2c1, EPS_VC6_SLAVE_C1, tx_buffer_7, write_length, rx_buffer, read_length);
			MSS_UART_polled_tx( &g_mss_uart0, rx_buffer, sizeof(rx_buffer));

			//SBAND
			uint8_t tx_buffer_8[TX_LENGTH] = {EPS_VC_CH1_BUS_VOLTAGE};
			instance = do_write_read_transaction(&g_core_i2c0, EPS_VC2_SLAVE_C0, tx_buffer_8, write_length, rx_buffer, read_length);
			MSS_UART_polled_tx( &g_mss_uart0, rx_buffer, sizeof(rx_buffer) );

			uint8_t tx_buffer_9[TX_LENGTH] = {EPS_VC_CH1_SHUNT_VOLTAGE};
			instance = do_write_read_transaction(&g_core_i2c0, EPS_VC2_SLAVE_C0, tx_buffer_9, write_length, rx_buffer, read_length);
			MSS_UART_polled_tx( &g_mss_uart0, rx_buffer, sizeof(rx_buffer));

			//UHF
			uint8_t tx_buffer_10[TX_LENGTH] = {EPS_VC_CH2_BUS_VOLTAGE};
			instance = do_write_read_transaction(&g_core_i2c0, EPS_VC2_SLAVE_C0, tx_buffer_10, write_length, rx_buffer, read_length);
			MSS_UART_polled_tx( &g_mss_uart0, rx_buffer, sizeof(rx_buffer) );

			uint8_t tx_buffer_11[TX_LENGTH] = {EPS_VC_CH2_SHUNT_VOLTAGE};
			instance = do_write_read_transaction(&g_core_i2c0, EPS_VC2_SLAVE_C0, tx_buffer_11, write_length, rx_buffer, read_length);
			MSS_UART_polled_tx( &g_mss_uart0, rx_buffer, sizeof(rx_buffer));



			//CDH
			uint8_t tx_buffer_12[TX_LENGTH] = {EPS_VC_CH3_BUS_VOLTAGE};
			instance = do_write_read_transaction(&g_core_i2c0, EPS_VC1_SLAVE_C0, tx_buffer_12, write_length, rx_buffer, read_length);
			MSS_UART_polled_tx( &g_mss_uart0, rx_buffer, sizeof(rx_buffer) );

			uint8_t tx_buffer_13[TX_LENGTH] = {EPS_VC_CH3_SHUNT_VOLTAGE};
			instance = do_write_read_transaction(&g_core_i2c0, EPS_VC1_SLAVE_C0, tx_buffer_13, write_length, rx_buffer, read_length);
			MSS_UART_polled_tx( &g_mss_uart0, rx_buffer, sizeof(rx_buffer));*/


}



#endif

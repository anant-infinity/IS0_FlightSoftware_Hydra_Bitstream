

#ifndef _GPIOS_C
	#define _GPIOS_C

#include "gpios.h"



void Global_Init_GPIOs(){

	void test_ISO_GPIO_Subsystem_Enable_GPIOs() {
		//while(1){

		//DSW - 0 - H1 13 - DAXSS SWITCH - Enables 8.4V at H1 pins 3 and 5
		MSS_GPIO_set_output( MSS_GPIO_1, 1);
		MSS_GPIO_set_output( MSS_GPIO_1, 0);

		//DSW - 1 - H1 14 - CIP SWITCH - Enables 12V at H2 pin 23
		MSS_GPIO_set_output( MSS_GPIO_2, 1);
		MSS_GPIO_set_output( MSS_GPIO_2, 0);

		//DSW - 2 - H1 15 - ADCS_GPS SWITCH - Enables 12V at H1 pin 30
		//Also Enables 12 V at H2 Pin 15, 17, 19 and enables 3.3V at H2 pin 16
		MSS_GPIO_set_output( MSS_GPIO_3, 1);
		MSS_GPIO_set_output( MSS_GPIO_3, 0);

		//DSW - 3 - H1 16 - SBAND SWITCH - Enables 6V at H2 Pin 11
		MSS_GPIO_set_output( MSS_GPIO_4, 1);
		MSS_GPIO_set_output( MSS_GPIO_4, 0);

		//DSW - 4 - H1 17 - BATTERY HEATER SWITCH -
		MSS_GPIO_set_output( MSS_GPIO_5, 1);
		MSS_GPIO_set_output( MSS_GPIO_5, 0);

		//To Test Tomorrow

		//CONVEST Signal for ADC - H1 6
		MSS_GPIO_set_output( MSS_GPIO_6, 1);
		MSS_GPIO_set_output( MSS_GPIO_6, 0);

		//Enable Sensor Board - H1 18
		MSS_GPIO_set_output( MSS_GPIO_22, 1);
		MSS_GPIO_set_output( MSS_GPIO_22, 0);

		//Reset Sensor Sensor Board - H2 50 - ALWAYS PULL HIGH
		MSS_GPIO_set_output( MSS_GPIO_25, 1);
		MSS_GPIO_set_output( MSS_GPIO_25, 0);
		MSS_GPIO_set_output( MSS_GPIO_25, 1);

		//Flash Write Protect of Sensor Board - H1 49 - ALWAYS PULL HIGH
		MSS_GPIO_set_output( MSS_GPIO_26, 1);
		MSS_GPIO_set_output( MSS_GPIO_26, 0);
		MSS_GPIO_set_output( MSS_GPIO_26, 1);
		//}

		}


    MSS_GPIO_init();

    MSS_GPIO_config( GPIO_DSW0_DAXSS, MSS_GPIO_OUTPUT_MODE); /* configuring GPIO_1 for DSW_0 BCR Enable - default 0 */
    MSS_GPIO_config( GPIO_DSW1_CIP, MSS_GPIO_OUTPUT_MODE); /* configuring GPIO_2 for DSW_1 CIP - default 0 */
    MSS_GPIO_config( GPIO_DSW2_ADCS, MSS_GPIO_OUTPUT_MODE); /* configuring GPIO_3 for DSW_2 ADCS & GPS - default 0 */
    MSS_GPIO_config( GPIO_DSW3_Sband, MSS_GPIO_OUTPUT_MODE); /* configuring GPIO_4 for DSW_3 SBand - default 0 */
    MSS_GPIO_config( GPIO_DSW4_Bat_heat, MSS_GPIO_OUTPUT_MODE); /* configuring GPIO_5 for DSW_4 bat heater - default 0 */

    MSS_GPIO_config( GPIO_CONVEST, MSS_GPIO_OUTPUT_MODE); /* configuring for Convest Signal - default 0 */

    MSS_GPIO_config( GPIO_PWR_CYCLE_SC, MSS_GPIO_OUTPUT_MODE); /* configuring for giving spacecraft power cycle signal - default 1*/
    MSS_GPIO_config( GPIO_RESET_IC, MSS_GPIO_OUTPUT_MODE); /* configuring for giving signal to on board Reset IC. - default 1 */
	MSS_GPIO_config( GPIO_EN_BUS_TRAN,MSS_GPIO_OUTPUT_MODE); /* giving EN to bus transceiver. - default 1 */


	MSS_GPIO_config( GPIO_EN_SD0,MSS_GPIO_OUTPUT_MODE); /* configuring for giving EN switch of sd card0 - default 0*/
	MSS_GPIO_config( GPIO_EN_SD1,MSS_GPIO_OUTPUT_MODE); /* configuring for giving EN switch of sd card1 - default 0 */

    MSS_GPIO_config( GPIO_SBAND_EN,MSS_GPIO_OUTPUT_MODE); /*configuring for EN pin of SBand - default 0 */
    MSS_GPIO_config( GPIO_SBAND_NRESET,MSS_GPIO_OUTPUT_MODE ); /*configuring for FPGA reset pin of SBand - default 1 */

    MSS_GPIO_config( GPIO_CTRL_MOSI_SD,MSS_GPIO_OUTPUT_MODE ); /*configuring for FPGA reset pin of SBand - default 0 */
    MSS_GPIO_set_output( GPIO_CTRL_MOSI_SD, 0);
    


	MSS_GPIO_set_output( GPIO_DSW0_DAXSS, 0);
	MSS_GPIO_set_output( GPIO_DSW1_CIP, 0);
	MSS_GPIO_set_output( GPIO_DSW2_ADCS, 0);
	MSS_GPIO_set_output( GPIO_DSW3_Sband, 0);
	MSS_GPIO_set_output( GPIO_DSW4_Bat_heat, 0);
	MSS_GPIO_set_output( GPIO_CONVEST, 0);
	MSS_GPIO_set_output( GPIO_DEP_SP1, 0);
	MSS_GPIO_set_output( GPIO_PWR_CYCLE_SC, 1); /* Make sure that the spacecraft power cycle signal is tie high by default*/
	MSS_GPIO_set_output( GPIO_RESET_IC, 1); /* Pulling the input of the external Watchdog timer high*/
	MSS_GPIO_set_output( GPIO_EN_BUS_TRAN, 0); /* Enable the bus transceivers - By default high pulling it low now to enable the bus transceiver*/
	MSS_GPIO_set_output( GPIO_EN_UHF, 1); /* Make sure that UHF is by Default Enable (Check the logic active high or low?)*/
	MSS_GPIO_set_output( GPIO_SBAND_NRESET, 1);
	MSS_GPIO_set_output( GPIO_SBAND_EN, 1);

	MSS_GPIO_set_output( GPIO_EN_SD0, 1);	/* Turn ON the sd card 0*/
	// TODO: Turn this back on once we have one that isn't blown!
//	MSS_GPIO_set_output( GPIO_EN_SD1, 1);	/* Turn ON the sd card 1*/
	MSS_GPIO_set_output( GPIO_DEP_SP2, 0);	/* Turn OFF the solar panel 1 deployment */
	MSS_GPIO_set_output( GPIO_DEP_ANT, 0);	/* Turn OFF the antenna deployment */

}

#endif

/*
 * rtc.h
 *
 *  Created on: Jun 13, 2018
 *      Author: Ankit
 */



#ifndef _I2C_H
	#define _I2C_H

#undef  GLOBAL
#ifdef _I2C_C
#define GLOBAL
#else
#define GLOBAL  extern
#endif

#include "hal/hal.h"
#include "../../t1_hw_platform.h"

	/*------------------------------------------------------------------------------
	 * Register based address info for three EPS CoreI2C peripherals
	 */
	#define COREI2C_0                     I_EPS_I2C_C_0			//I2C Critical Channel 0
	#define COREI2C_1                     J_EPS_I2C_C_1			//I2C Critical Channel 1
	#define COREI2C_2					  K_EPS_I2C_NC			//I2C Non-Critical Channel

	/*------------------------------------------------------------------------------
	 * Register based address info for Sensor Board CoreI2C peripheral
	 */
	#define COREI2C_3					  L_SENSOR_BOARD_I2C_0	//I2C for Sensor Board

#define I2C_STATUS_REG_OFFSET 0x00 	
#define I2C_CONFIG_REG_OFFSET 0x04	
#define I2C_RESETS_REG_OFFSET 0x08	
#define I2C_BYTE_WRITTER_POINTER_L_REG_OFFSET 0x0C
#define I2C_BYTE_WRITTER_POINTER_U_REG_OFFSET 0x10
#define I2C_DIVIDER_REG_OFFSET		0x14
#define I2C_READ_END_POINTER_L_REG_OFFSET	0x1C
#define I2C_READ_END_POINTER_U_REG_OFFSET		0x20
#define I2C_WRITE_DATA_REG_OFFSET		0x24
#define I2C_READ_DATA_REG_OFFSET		0x28
#define I2C_READ_POINTER_L_REG_OFFSET		0x2C
#define I2C_READ_POINTER_U_REG_OFFSET		0x30
#define I2C_REC_DATA_UB_REG_OFFSET				0x34
#define I2C_REC_DATA_LB_REG_OFFSET				0x38

uint8_t I2C_Set_Divider(addr_t addr, uint8_t s);
uint8_t I2C_Get_Status(addr_t addr);
uint8_t I2C_Set_Reset(addr_t addr, uint8_t);
uint8_t I2C_Set_Config(addr_t addr, uint8_t);
uint8_t I2C_Get_Received_Data_UB(addr_t addr);
uint8_t I2C_Get_Received_Data_LB(addr_t addr);
uint8_t I2C_Set_Write_Data(addr_t addr, uint8_t);
uint16_t I2C_Set_Write_Pointer(addr_t addr, uint16_t);
uint16_t I2C_Set_Read_End_Pointer(addr_t addr, uint16_t);
uint8_t I2C_Get_Read_Data(addr_t addr);
uint16_t I2C_Get_Read_Pointer(addr_t addr);
uint16_t I2C_Transaction(addr_t addr, uint8_t * tx_data, uint8_t tx_len, uint8_t rx_len);

//GLOBAL uint8_t Globals.I2C_Error_Flag;

#endif /* RTC_H_ */


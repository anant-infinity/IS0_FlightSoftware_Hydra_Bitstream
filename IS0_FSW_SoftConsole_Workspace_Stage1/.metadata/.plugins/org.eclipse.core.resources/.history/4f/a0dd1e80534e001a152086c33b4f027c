/*
 * pslv_uart.c
 *
 *  Created on: Feb 13, 2020
 *      Author: Anant
 */


#include "PSLV_UART/pslv_uart.h"
#include "Seq_ops/main_seq.h"
#include "SD_CARD/sd.h"
#include "RTC/rtc.h"
#include "Utils/utils.h"
#include "string.h"
#include "../../CMSIS/mss_assert.h"
#include "SPI_Flash/spi_flash.h"
#include "hal/hal.h"
#include "CMSIS/system_m2sxxx.h"

uint8_t status;
uint8_t i;



void Fill_FIFO(){
	// Reset FIFO and state machine
	Reset_FIFO_SM();

	//check if the STATUS register is 0x01 , if yes load next packet into the FIFO
	if(Get_Status_Reg() == 0x01 )
	// Prepare the packet in the FIFO
	for (i=0;i<PacketSize;i++)
	{
	// Set data value

	//Set REset write enable bit
	Set_Reset_Write_Enable_FIFO();

	}

}

void Set_Data_Byte_FIFO(uint8_t data){
	HAL_set_8bit_reg(PSLV_UART, TX_DATA, data);

}



void Set_Reset_Write_Enable_FIFO(){
	// Set write enable bit for FIFO
	HAL_set_8bit_reg(PSLV_UART, CONFIG, (1<<WR_EN_BIT));
	// Reset write enable bit for FIFO
	HAL_set_8bit_reg(PSLV_UART, CONFIG, 0);
}

uint8_t Get_Status_Reg(){
	status = HAL_get_8bit_reg(PSLV_UART, STATUS);
	return status;
}

void Reset_FIFO_SM(){
	// Reset FIFO and state machine
	HAL_set_8bit_reg(PSLV_UART,CONFIG, (1<<RESET_SM_BIT));
}
